-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2022-12-04 15:28:27 GMT
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE addresses (
    address_id INTEGER NOT NULL,
    line1      VARCHAR2(20 CHAR) NOT NULL,
    line2      VARCHAR2(20 CHAR) NOT NULL,
    line3      VARCHAR2(20 CHAR) NOT NULL,
    locality   VARCHAR2(20 CHAR) NOT NULL,
    region     VARCHAR2(20 CHAR) NOT NULL,
    postcode   VARCHAR2(20 CHAR) NOT NULL,
    country    VARCHAR2(20 CHAR) NOT NULL
);

-- Error - Index Addresses__IDX has no columns

-- Error - Index Addresses__IDXv1 has no columns

ALTER TABLE addresses ADD CONSTRAINT addresses_pk PRIMARY KEY ( address_id );

CREATE TABLE bookingcustomers ( 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    bookingreceipts_booking_receipt_id           INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    bookingreceipts_diningtables_dining_table_id INTEGER NOT NULL,
    customers_customer_id                        INTEGER NOT NULL
);

CREATE TABLE bookingreceipts (
    booking_receipt_id           INTEGER NOT NULL,
    timestamp                    TIMESTAMP,
    num_people                   INTEGER NOT NULL,
    booking_method               VARCHAR2(20 CHAR) NOT NULL,
    diningtables_dining_table_id INTEGER NOT NULL,
    staff_staff_id               INTEGER NOT NULL,
    staff_restaurants_id         INTEGER NOT NULL,
    waiter_id                    INTEGER NOT NULL,
    manager_id                   INTEGER NOT NULL
);

ALTER TABLE bookingreceipts ADD CONSTRAINT bookingreceipts_pk PRIMARY KEY ( booking_receipt_id,
                                                                            diningtables_dining_table_id );

CREATE TABLE customers (
    customer_id      INTEGER NOT NULL,
    people_person_id INTEGER
);

-- Error - Index Customers__IDXv2 has no columns
CREATE UNIQUE INDEX customers__idxv5 ON
    customers (
        people_person_id
    ASC );

ALTER TABLE customers ADD CONSTRAINT customers_pk PRIMARY KEY ( customer_id );

CREATE TABLE diningtables (
    dining_table_id           INTEGER NOT NULL,
    "size"                    INTEGER NOT NULL,
    location                  VARCHAR2(20 CHAR) NOT NULL,
    restaurants_restaurant_id INTEGER NOT NULL
);

ALTER TABLE diningtables ADD CONSTRAINT diningtables_pk PRIMARY KEY ( dining_table_id );

CREATE TABLE people (
    person_id                       INTEGER NOT NULL,
    name                            VARCHAR2(20 CHAR) NOT NULL,
    dob                             DATE NOT NULL,
    email                           VARCHAR2(255 CHAR) NOT NULL,
    phone_number                    VARCHAR2(15 CHAR) NOT NULL,
    addresses_address_id            INTEGER NOT NULL,
    id2                             INTEGER NOT NULL,
    staff_staff_id                  INTEGER NOT NULL,
    staff_restaurants_id            INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    staff_restaurants_restaurant_id INTEGER NOT NULL
);

CREATE UNIQUE INDEX people__idx ON
    people (
        staff_staff_id
    ASC,
        staff_restaurants_id
    ASC );

CREATE UNIQUE INDEX people__idx ON
    people (
        staff_staff_id
    ASC );

CREATE UNIQUE INDEX people__idx ON
    people (
        staff_staff_id
    ASC,
        staff_restaurants_restaurant_id
    ASC );

ALTER TABLE people ADD CONSTRAINT people_pk PRIMARY KEY ( person_id );

CREATE TABLE restaurants (
    restaurant_id        INTEGER NOT NULL,
    phone_number         VARCHAR2(15 CHAR) NOT NULL,
    addresses_address_id INTEGER NOT NULL
);

ALTER TABLE restaurants ADD CONSTRAINT restaurants_pk PRIMARY KEY ( restaurant_id );

CREATE TABLE staff (
    staff_id                  INTEGER NOT NULL,
    role                      VARCHAR2(20 CHAR) NOT NULL,
    start_date                DATE NOT NULL,
    restaurants_restaurant_id INTEGER NOT NULL,
    id21                      INTEGER NOT NULL
);

ALTER TABLE staff ADD CONSTRAINT staff_pk PRIMARY KEY ( staff_id,
                                                        restaurants_restaurant_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE bookingcustomers
    ADD CONSTRAINT bookingcustomers_bookingreceipts_fk FOREIGN KEY ( bookingreceipts_booking_receipt_id,
                                                                     bookingreceipts_diningtables_dining_table_id )
        REFERENCES bookingreceipts ( booking_receipt_id,
                                     diningtables_dining_table_id );

ALTER TABLE bookingcustomers
    ADD CONSTRAINT bookingcustomers_customers_fk FOREIGN KEY ( customers_customer_id )
        REFERENCES customers ( customer_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE bookingreceipts
    ADD CONSTRAINT bookingreceipts_diningtables_fk FOREIGN KEY ( diningtables_dining_table_id )
        REFERENCES diningtables ( dining_table_id );

ALTER TABLE bookingreceipts
    ADD CONSTRAINT bookingreceipts_staff_fk FOREIGN KEY ( staff_staff_id,
                                                          staff_restaurants_id )
        REFERENCES staff ( staff_id,
                           restaurants_restaurant_id );

ALTER TABLE customers
    ADD CONSTRAINT customers_people_fk FOREIGN KEY ( people_person_id )
        REFERENCES people ( person_id );

ALTER TABLE diningtables
    ADD CONSTRAINT diningtables_restaurants_fk FOREIGN KEY ( restaurants_restaurant_id )
        REFERENCES restaurants ( restaurant_id );

ALTER TABLE people
    ADD CONSTRAINT people_addresses_fk FOREIGN KEY ( addresses_address_id )
        REFERENCES addresses ( address_id );

ALTER TABLE people
    ADD CONSTRAINT people_staff_fk FOREIGN KEY ( staff_staff_id,
                                                 staff_restaurants_restaurant_id )
        REFERENCES staff ( staff_id,
                           restaurants_restaurant_id );

ALTER TABLE restaurants
    ADD CONSTRAINT restaurants_addresses_fk FOREIGN KEY ( addresses_address_id )
        REFERENCES addresses ( address_id );

ALTER TABLE staff
    ADD CONSTRAINT staff_restaurants_fk FOREIGN KEY ( restaurants_restaurant_id )
        REFERENCES restaurants ( restaurant_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             4
-- ALTER TABLE                             17
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   8
-- WARNINGS                                 0
